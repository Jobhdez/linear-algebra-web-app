{"ast":null,"code":"var _jsxFileName = \"/Users/lambdainsphere/seminar/frontend/src/components/LinearAlgebraChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { w3cwebsocket as WebSocket } from 'websocket';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LinearAlgebraChat() {\n  _s();\n\n  const [login, setLogin] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [value, setValue] = useState('');\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('philosophy');\n  const client = new WebSocket('ws://127.0.0.1:8000/ws/chat/' + room + '/');\n\n  const onButtonClicked = e => {\n    client.c.send(JSON.stringify({\n      type: \"message\",\n      message: value,\n      name: name\n    }));\n    setValue('');\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      setMessages(() => [...messages, {\n        msg: dataFromServer.message,\n        name: dataFromServer.name\n      }]);\n    };\n  }, [client, messages]);\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: login ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 50\n      },\n      children: [\"Room Name: \", room, /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          height: 500,\n          maxHeight: 500,\n          overflow: 'auto',\n          boxShadow: 'none'\n        },\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardHeader, {\n              title: message.name,\n              subheader: message.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 26\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-helperText\",\n        label: \"Make a comment\",\n        variant: \"outlined\",\n        value: value,\n        fullWidth: true,\n        onChange: e => {\n          setValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onButtonClicked,\n        children: \"Start Chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& .MuiTextField-root': {\n          m: 1,\n          width: '25ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Meaningful Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"email\",\n          label: \"Chatroom\",\n          value: room,\n          onChange: e => {\n            setRoom(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"username\",\n          label: \"username\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setLogin(true),\n          children: \"Start Chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LinearAlgebraChat, \"XYKgCfkR1B3ywG3F7nAt1A9gPPo=\");\n\n_c = LinearAlgebraChat;\nexport default LinearAlgebraChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinearAlgebraChat\");","map":{"version":3,"names":["React","useState","useEffect","w3cwebsocket","WebSocket","TextField","Container","Paper","Card","Button","Box","CardHeader","Typography","LinearAlgebraChat","login","setLogin","messages","setMessages","value","setValue","name","setName","room","setRoom","client","onButtonClicked","e","c","send","JSON","stringify","type","message","preventDefault","onmessage","dataFromServer","parse","data","msg","console","log","marginTop","height","maxHeight","overflow","boxShadow","map","target","m","width"],"sources":["/Users/lambdainsphere/seminar/frontend/src/components/LinearAlgebraChat.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { w3cwebsocket as WebSocket } from 'websocket';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\n\n\n\n\nfunction LinearAlgebraChat() {\n\n    const [login, setLogin] = useState(false);\n    const [messages, setMessages] = useState([]);\n    const [value, setValue] = useState('');\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('philosophy');\n\n    const client = new WebSocket('ws://127.0.0.1:8000/ws/chat/' + room + '/')\n    const onButtonClicked = (e) => {\n        client.c.send(JSON.stringify({\n            type: \"message\",\n            message: value,\n            name: name\n        }));\n        setValue('')\n        e.preventDefault();\n\n    }\n   \n    useEffect(() => {\n        client.onmessage = (message) => {\n            const dataFromServer = JSON.parse(message.data);\n            setMessages(() => [...messages, {\n                msg: dataFromServer.message,\n                name: dataFromServer.name,}])\n        }\n    }, [client, messages],);\n\n    console.log(messages);\n    return(\n        <Container component=\"main\" maxWidth=\"xs\">\n            {login ? \n              <div style={{marginTop: 50,}}>\n                  Room Name: {room}\n                  <Paper style={{height: 500, maxHeight: 500, overflow: 'auto', boxShadow: 'none',}}>\n                      {messages.map(message => <>\n                         <Card>\n                             <CardHeader title={message.name}\n                                         subheader={message.msg}\n                                         />\n                         </Card>\n                      </>)}\n                  </Paper>\n                  \n                      <TextField\n                         id=\"outlined-helperText\"\n                         label=\"Make a comment\"\n                         variant=\"outlined\"\n                         value={value}\n                         fullWidth\n                         onChange={e => {\n                             setValue(e.target.value)\n                             \n                         }}\n                         />\n                         <Button \n                           type=\"submit\"\n                           fullWidth\n                           variant=\"contained\"\n                           color=\"primary\"\n                           onClick={onButtonClicked}\n                           >\n                               Start Chatting\n                           </Button>\n                           \n                \n              </div>\n              :\n              <Box \n           component=\"form\"\n           sx={{\n               '& .MuiTextField-root': {m: 1, width: '25ch'},\n           }}\n           noValidate\n           autoComplete=\"off\"\n           >\n               <div>\n                   <Typography component=\"h1\" variant=\"h5\">\n                       Meaningful Chat\n                   </Typography>\n                  \n                   <TextField\n                     required\n                     id=\"email\"\n                     label=\"Chatroom\"\n                     value={room}\n                     onChange={e => {\n                         setRoom(e.target.value);\n                         \n                     }}\n                     />\n                     <TextField\n                       required\n                       id=\"username\"\n                       label=\"username\"\n                       value={name}\n                       onChange={e => {\n                           setName(e.target.value)\n                           \n                       }}\n                       />\n                       <Button \n                           type=\"submit\"\n                           fullWidth\n                           variant=\"contained\"\n                           color=\"primary\"\n                           onClick={() => setLogin(true)}\n                           >\n                               Start Chatting\n                           </Button>\n               </div>\n           </Box>}\n           \n              \n        </Container>\n         \n    );\n}\n\nexport default LinearAlgebraChat;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,YAAY,IAAIC,SAAzB,QAA0C,WAA1C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;;AAKA,SAASC,iBAAT,GAA6B;EAAA;;EAEzB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,YAAD,CAAhC;EAEA,MAAMuB,MAAM,GAAG,IAAIpB,SAAJ,CAAc,iCAAiCkB,IAAjC,GAAwC,GAAtD,CAAf;;EACA,MAAMG,eAAe,GAAIC,CAAD,IAAO;IAC3BF,MAAM,CAACG,CAAP,CAASC,IAAT,CAAcC,IAAI,CAACC,SAAL,CAAe;MACzBC,IAAI,EAAE,SADmB;MAEzBC,OAAO,EAAEd,KAFgB;MAGzBE,IAAI,EAAEA;IAHmB,CAAf,CAAd;IAKAD,QAAQ,CAAC,EAAD,CAAR;IACAO,CAAC,CAACO,cAAF;EAEH,CATD;;EAWA/B,SAAS,CAAC,MAAM;IACZsB,MAAM,CAACU,SAAP,GAAoBF,OAAD,IAAa;MAC5B,MAAMG,cAAc,GAAGN,IAAI,CAACO,KAAL,CAAWJ,OAAO,CAACK,IAAnB,CAAvB;MACApB,WAAW,CAAC,MAAM,CAAC,GAAGD,QAAJ,EAAc;QAC5BsB,GAAG,EAAEH,cAAc,CAACH,OADQ;QAE5BZ,IAAI,EAAEe,cAAc,CAACf;MAFO,CAAd,CAAP,CAAX;IAGH,CALD;EAMH,CAPQ,EAON,CAACI,MAAD,EAASR,QAAT,CAPM,CAAT;EASAuB,OAAO,CAACC,GAAR,CAAYxB,QAAZ;EACA,oBACI,QAAC,SAAD;IAAW,SAAS,EAAC,MAArB;IAA4B,QAAQ,EAAC,IAArC;IAAA,UACKF,KAAK,gBACJ;MAAK,KAAK,EAAE;QAAC2B,SAAS,EAAE;MAAZ,CAAZ;MAAA,0BACgBnB,IADhB,eAEI,QAAC,KAAD;QAAO,KAAK,EAAE;UAACoB,MAAM,EAAE,GAAT;UAAcC,SAAS,EAAE,GAAzB;UAA8BC,QAAQ,EAAE,MAAxC;UAAgDC,SAAS,EAAE;QAA3D,CAAd;QAAA,UACK7B,QAAQ,CAAC8B,GAAT,CAAad,OAAO,iBAAI;UAAA,uBACtB,QAAC,IAAD;YAAA,uBACI,QAAC,UAAD;cAAY,KAAK,EAAEA,OAAO,CAACZ,IAA3B;cACY,SAAS,EAAEY,OAAO,CAACM;YAD/B;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QADsB,iBAAxB;MADL;QAAA;QAAA;QAAA;MAAA,QAFJ,eAYQ,QAAC,SAAD;QACG,EAAE,EAAC,qBADN;QAEG,KAAK,EAAC,gBAFT;QAGG,OAAO,EAAC,UAHX;QAIG,KAAK,EAAEpB,KAJV;QAKG,SAAS,MALZ;QAMG,QAAQ,EAAEQ,CAAC,IAAI;UACXP,QAAQ,CAACO,CAAC,CAACqB,MAAF,CAAS7B,KAAV,CAAR;QAEH;MATJ;QAAA;QAAA;QAAA;MAAA,QAZR,eAuBW,QAAC,MAAD;QACE,IAAI,EAAC,QADP;QAEE,SAAS,MAFX;QAGE,OAAO,EAAC,WAHV;QAIE,KAAK,EAAC,SAJR;QAKE,OAAO,EAAEO,eALX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAvBX;IAAA;MAAA;MAAA;MAAA;IAAA,QADI,gBAqCJ,QAAC,GAAD;MACH,SAAS,EAAC,MADP;MAEH,EAAE,EAAE;QACA,wBAAwB;UAACuB,CAAC,EAAE,CAAJ;UAAOC,KAAK,EAAE;QAAd;MADxB,CAFD;MAKH,UAAU,MALP;MAMH,YAAY,EAAC,KANV;MAAA,uBAQC;QAAA,wBACI,QAAC,UAAD;UAAY,SAAS,EAAC,IAAtB;UAA2B,OAAO,EAAC,IAAnC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAKI,QAAC,SAAD;UACE,QAAQ,MADV;UAEE,EAAE,EAAC,OAFL;UAGE,KAAK,EAAC,UAHR;UAIE,KAAK,EAAE3B,IAJT;UAKE,QAAQ,EAAEI,CAAC,IAAI;YACXH,OAAO,CAACG,CAAC,CAACqB,MAAF,CAAS7B,KAAV,CAAP;UAEH;QARH;UAAA;UAAA;UAAA;QAAA,QALJ,eAeM,QAAC,SAAD;UACE,QAAQ,MADV;UAEE,EAAE,EAAC,UAFL;UAGE,KAAK,EAAC,UAHR;UAIE,KAAK,EAAEE,IAJT;UAKE,QAAQ,EAAEM,CAAC,IAAI;YACXL,OAAO,CAACK,CAAC,CAACqB,MAAF,CAAS7B,KAAV,CAAP;UAEH;QARH;UAAA;UAAA;UAAA;QAAA,QAfN,eAyBQ,QAAC,MAAD;UACI,IAAI,EAAC,QADT;UAEI,SAAS,MAFb;UAGI,OAAO,EAAC,WAHZ;UAII,KAAK,EAAC,SAJV;UAKI,OAAO,EAAE,MAAMH,QAAQ,CAAC,IAAD,CAL3B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAzBR;MAAA;QAAA;QAAA;QAAA;MAAA;IARD;MAAA;MAAA;MAAA;IAAA;EAtCN;IAAA;IAAA;IAAA;EAAA,QADJ;AAwFH;;GAtHQF,iB;;KAAAA,iB;AAwHT,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}